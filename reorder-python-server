#!/usr/bin/env python
import time
import os
from http.server import BaseHTTPRequestHandler, HTTPServer
from pathlib import Path
from reorder_python_imports import fix_file_contents

HOST_NAME = 'localhost'
PORT_NUMBER = 31338

def contains_git(p: Path) -> bool:
    return bool(list(x for x in p.iterdir() if x.name == ".git"))

class MyHandler(BaseHTTPRequestHandler):
    def do_POST(self):
        self.send_response(100)
        self.end_headers()
        project_root = Path(self.path)
        while not contains_git(project_root):
            project_root = project_root.parent
        os.chdir(str(project_root))
        content_raw = self.rfile.read(int(self.headers['content-length']))
        content = content_raw.decode()
        new_contents = fix_file_contents(
            content,
            imports_to_add=[],
            imports_to_remove=[],
            imports_to_replace=[],
            separate_relative=False,
            separate_from_import=False,
            application_directories=[],
        )
        self.wfile.write(new_contents.encode())


if __name__ == '__main__':
    server_class = HTTPServer
    httpd = server_class((HOST_NAME, PORT_NUMBER), MyHandler)
    print(time.asctime(), 'Server Starts - %s:%s' % (HOST_NAME, PORT_NUMBER))
    try:
        httpd.serve_forever()
    except KeyboardInterrupt:
        pass
    httpd.server_close()
    print(time.asctime(), 'Server Stops - %s:%s' % (HOST_NAME, PORT_NUMBER))
